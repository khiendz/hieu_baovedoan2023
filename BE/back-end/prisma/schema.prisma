// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Book {
  BookId        Int       @id @default(autoincrement()) @map("BookId")
  Title         String
  ISBN          String?
  Quantity      Int?
  Location      String?
  PublicYear    DateTime?
  Img           String?
  Description   String?
  Barcode       String    @default("")
  PublisherId   Int?      @default(0)
  AuthorId      Int?      @default(0)
  LateFeeTypeId Int       @default(0)

  Publisher     Publisher?      @relation(fields: [PublisherId], references: [PublisherId])
  Author        Author?         @relation(fields: [AuthorId], references: [AuthorId])
  BorrowedBook  BorrowedBook[]
  Book_BookType Book_BookType[]
  BookType      BookType[]
  LateFeeType   LateFeeType     @relation(fields: [LateFeeTypeId], references: [LateFeeTypeId])
}

model Author {
  AuthorId    Int     @id @default(autoincrement()) @map("AuthorId")
  Name        String
  Description String?
  Book        Book[]
}

model Publisher {
  PublisherId Int     @id @default(autoincrement()) @map("PublisherId")
  Name        String
  Address     String?
  PHONE       String?
  Website     String?
  Book        Book[]
}

model BookType {
  BookTypeId    Int             @id @default(autoincrement()) @map("BookTypeId")
  Name          String
  Description   String?
  Img           String?
  Book_BookType Book_BookType[]
  Book          Book[]
}

model Book_BookType {
  Book_BookTypeId Int @id @default(autoincrement()) @map("Book_BookTypeId")
  BookId          Int
  BookTypeId      Int

  Book     Book     @relation(fields: [BookId], references: [BookId])
  BookType BookType @relation(fields: [BookTypeId], references: [BookTypeId])
}

model Member {
  MemberId     Int            @id @default(autoincrement()) @map("MemberId")
  Name         String?
  Address      String?
  Phone        String         @unique
  Email        String?
  JoinDate     DateTime?
  MemberRoleId Int            @default(0)
  BorrowedBook BorrowedBook[]
}

model MemberRole {
  MemberRoleId Int     @id @default(autoincrement()) @map("MemberRoleId")
  Value        String
  Description  String?
}

model BorrowedBook {
  TransactionId Int       @id @default(autoincrement()) @map("TransactionId")
  MemberId      Int       @map("MemberId")
  BookId        Int       @map("BookId")
  BorrowDate    DateTime?
  DueDate       DateTime?
  ReturnDate    DateTime?

  Member  Member?   @relation(fields: [MemberId], references: [MemberId])
  Book    Book?     @relation(fields: [BookId], references: [BookId])
  LateFee LateFee[]
}

model LateFee {
  LateFeeId     Int @id @default(autoincrement()) @map("LateFeeId")
  TransactionId Int @map("TransactionId")
  FeeAmount     Int

  BorrowedBook BorrowedBook @relation(fields: [TransactionId], references: [TransactionId])
  Payment      Payment[]
}

model LateFeeType {
  LateFeeTypeId Int     @id @default(autoincrement()) @map("LateFeeTypeId")
  Name          String
  Description   String
  FeeAmount     Decimal
  DateCount     Int
  Book          Book[]
}

model Payment {
  PaymentID     Int       @id @default(autoincrement()) @map("PaymentID")
  LateFeeId     Int?      @map("LateFeeId")
  PaymentDate   DateTime?
  Amount        Float?
  StatePayments Int?
  OrderCode     String    @unique @default("")

  LateFee LateFee? @relation(fields: [LateFeeId], references: [LateFeeId])
}

model Employee {
  EmployeeId     Int     @id @default(autoincrement()) @map("EmployeeId")
  WorkSchedule   String?
  EmployeeTypeId Int     @default(0)
  UserId         Int

  EmployeeType EmployeeType @relation(fields: [EmployeeTypeId], references: [EmployeeTypeId])
  User         User?        @relation(fields: [UserId], references: [UserId])
}

model EmployeeType {
  EmployeeTypeId Int        @id @default(autoincrement()) @map("EmployeeTypeId")
  Name           String
  Description    String
  Employee       Employee[]
}

//Bảng user
model User {
  UserId    Int        @id @default(autoincrement()) @map(name: "UserId")
  FirstName String
  LastName  String
  Address   String
  Phone     String     @unique
  AccountId Int?
  Account   Account[]
  Employee  Employee[]
}

//Bảng tài khoản
model Account {
  AccountId Int    @id @default(autoincrement()) @map(name: "AccountId")
  UserName  String
  Password  String
  RoleId    Int    @default(0)
  UserId    Int

  User        User?        @relation(fields: [UserId], references: [UserId])
  RoleAccount RoleAccount? @relation(fields: [RoleId], references: [RoleId])
}

//Bảng phân quyền
model RoleAccount {
  RoleId      Int       @id @default(autoincrement()) @map(name: "RoleId")
  RoleName    String
  Description String
  Account     Account[]
}
